// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id           Int                 @id @default(autoincrement())
  name         String
  description  ProductDescription?
  stock        Stock               @relation(fields: [stockId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  stockId      Int                 @unique
  priceHistory Price[]
  provider     Provider            @relation(fields: [providerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  providerId   Int
  category     Category
  carts        CartProduct[]
  invoice      Invoice?            @relation(fields: [invoiceId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  invoiceId    Int?
}

model ProductDescription {
  id           Int            @id @default(autoincrement())
  description  String
  product      Product        @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  rating       Float          @default(0)
  reviews      Review[]
  payingMethod PayingMethod[]

  productId Int @unique
}

model Review {
  id                   Int                @id @default(autoincrement())
  user                 User               @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId               Int
  productDescription   ProductDescription @relation(fields: [productDescriptionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productDescriptionId Int
  comment              String
  rating               Float              @default(0)
}

model User {
  id      Int      @id @default(autoincrement())
  name    String
  email   String?
  phone   String?
  reviews Review[]
  cart    Cart?
}

model Provider {
  id       Int       @id @default(autoincrement())
  name     String
  email    String?
  phone    String?
  products Product[]
}

model Stock {
  id      Int      @id @default(autoincrement())
  product Product?
  stock   Int      @default(0)
}

model Price {
  id        Int      @id @default(autoincrement())
  price     Int      @default(0)
  date      DateTime
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int
}

enum Category {
  VEHICLES
  SUPERMARKETS
  TECHNOLOGY
  TOOLS
  SPORTS
  FASHION
  TOYS
  BOOKS
  HEALTH
  ELECTRONICS
  PHONES
}

enum PayingMethod {
  CREDIT_CARD
  DEBIT_CARD
  CASH
  MERCADO_PAGO
}

model CartProduct {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int
}

model Cart {
  id             Int           @id @default(autoincrement())
  products       CartProduct[]
  user           User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         Int           @unique
  invoiceHistory Invoice[]
}

model Invoice {
  id           Int          @id @default(autoincrement())
  cart         Cart         @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartId       Int
  amount       Int
  payingMethod PayingMethod
  products     Product[]
}
